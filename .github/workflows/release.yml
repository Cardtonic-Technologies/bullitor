name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    permissions:
      actions: read
      checks: write
      contents: read
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        env:
          GH_TOKEN: ${{ secrets.TTT_GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup Nodejs 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci

      - run: npm run build

      - run: ls -al

#      - name: Create Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          IMAGE: 'bullitor:latest'
#        run: |
#          npx auto shipit

      - name: Get TAG
        id: get_tag
        run: echo TAG=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV

      - name: Get Repo Owner
        id: get_repo_owner
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Release build and push bullitor image
        uses: docker/build-push-action@v3
        with:
          outputs: "type=registry,push=true"
          platforms: linux/amd64,linux/arm64
          build-args: |
            Version=${{  env.TAG }}
            GitCommit=${{ github.sha }}
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/bullitor:${{ github.sha }}
            ghcr.io/${{ env.REPO_OWNER }}/bullitor:latest
